{"version":3,"sources":["../../src/index.ts","../../src/assets/blank.webm","../../src/assets/blank.mp4","App.tsx","index.tsx"],"names":["_video","document","createElement","isAllowedToSleep","setAllowedToSleep","Object","assign","current","style","position","top","left","width","height","_source_webm","setAttribute","appendChild","_source_mp4","body","preventToSleep","play","allowToSleep","removeAttribute","pause","App","device","useStayAwake","className","trim","onClick","ReactDOM","render","getElementById"],"mappings":"2LAKqB,WACnB,IAAMA,EAAS,iBAAOC,SAASC,cAAc,UAEvC,EAAwC,oBAAS,GAAhDC,EAAgB,KAAEC,EAAiB,KAE1C,qBAAU,WASRC,OAAOC,OAAON,EAAOO,QAAQC,MARY,CACvCC,SAAU,WACVC,IAAK,IACLC,KAAM,IACNC,MAAO,IACPC,OAAQ,MAKV,IAAMC,EAAeb,SAASC,cAAc,UAC5CY,EAAaC,aAAa,MCtBf,yBDuBXD,EAAaC,aAAa,OAAQ,cAElCf,EAAOO,QAAQS,YAAYF,GAE3B,IAAMG,EAAchB,SAASC,cAAc,UAC3Ce,EAAYF,aAAa,ME5Bd,wBF6BXE,EAAYF,aAAa,OAAQ,aAEjCf,EAAOO,QAAQS,YAAYC,GAE3BhB,SAASiB,KAAKF,YAAYhB,EAAOO,WAChC,CAACP,IAgBJ,MAAO,CAAEG,iBAAgB,EAAEgB,eAdJ,uBAAY,WACjCnB,EAAOO,QAAQQ,aAAa,OAAQ,QACpCf,EAAOO,QAAQa,OAEfhB,GAAkB,KACjB,IASwCiB,aAPtB,WACnBrB,EAAOO,QAAQe,gBAAgB,QAC/BtB,EAAOO,QAAQgB,QAEfnB,GAAkB,MGDPoB,MA3Cf,WACE,IAAMC,EAASC,IAEf,OACE,yBAAKC,UAAU,aACb,4BAAQA,UAAU,UAChB,8CACA,yHAMF,uBAAGA,UAAU,UAAb,UACU,IACR,8BACGF,EAAOtB,iBACJ,6BACA,mCAGR,yBAAKwB,UAAU,WACb,4BACEA,UAAW,yBACRF,EAAOtB,iBAAiC,GAAd,aAC1ByB,OACHC,QAASJ,EAAON,gBAJlB,iBAQA,4BACEQ,UAAW,2BACTF,EAAOtB,iBAAmB,YAAc,IACvCyB,OACHC,QAASJ,EAAOJ,cAJlB,kB,OC3BRS,EAASC,OAAO,kBAAC,EAAD,MAAS9B,SAAS+B,eAAe,W","file":"static/js/main.4e97bff5.chunk.js","sourcesContent":["import { useEffect, useRef, useState, useCallback } from \"react\";\n\nimport videoWebm from \"./assets/blank.webm\";\nimport videoMp4 from \"./assets/blank.mp4\";\n\nconst useStayAwake = () => {\n  const _video = useRef(document.createElement(\"video\"));\n\n  const [isAllowedToSleep, setAllowedToSleep] = useState(true);\n\n  useEffect(() => {\n    const _videoStyle: React.CSSProperties = {\n      position: \"absolute\",\n      top: \"0\",\n      left: \"0\",\n      width: \"0\",\n      height: \"0\",\n    };\n\n    Object.assign(_video.current.style, _videoStyle);\n\n    const _source_webm = document.createElement(\"source\");\n    _source_webm.setAttribute(\"src\", videoWebm);\n    _source_webm.setAttribute(\"type\", \"video/webm\");\n\n    _video.current.appendChild(_source_webm);\n\n    const _source_mp4 = document.createElement(\"source\");\n    _source_mp4.setAttribute(\"src\", videoMp4);\n    _source_mp4.setAttribute(\"type\", \"video/mp4\");\n\n    _video.current.appendChild(_source_mp4);\n\n    document.body.appendChild(_video.current);\n  }, [_video]);\n\n  const preventToSleep = useCallback(() => {\n    _video.current.setAttribute(\"loop\", \"loop\");\n    _video.current.play();\n\n    setAllowedToSleep(false);\n  }, []);\n\n  const allowToSleep = () => {\n    _video.current.removeAttribute(\"loop\");\n    _video.current.pause();\n\n    setAllowedToSleep(true);\n  };\n\n  return { isAllowedToSleep, preventToSleep, allowToSleep };\n};\n\nexport default useStayAwake;\n","export default \"dbc82ffb8a6ef458.webm\"","export default \"94a60da52f24224d.mp4\"","import React from \"react\";\nimport useStayAwake from \"use-stay-awake\";\n\nfunction App() {\n  const device = useStayAwake();\n\n  return (\n    <div className=\"container\">\n      <header className=\"header\">\n        <h1>use-stay-awake</h1>\n        <p>\n          React hook that will help the device stay awake while actively using\n          your website or app.\n        </p>\n      </header>\n\n      <p className=\"status\">\n        Status:{\" \"}\n        <span>\n          {device.isAllowedToSleep\n            ? \"Device is allowed to sleep\"\n            : \"Device is not allowed to sleep\"}\n        </span>\n      </p>\n      <div className=\"control\">\n        <button\n          className={`btn is-primary ${\n            !device.isAllowedToSleep ? \"is-active\" : \"\"\n          }`.trim()}\n          onClick={device.preventToSleep}\n        >\n          Prevent Sleep\n        </button>\n        <button\n          className={`btn is-secondary ${\n            device.isAllowedToSleep ? \"is-active\" : \"\"\n          }`.trim()}\n          onClick={device.allowToSleep}\n        >\n          Allow Sleep\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}